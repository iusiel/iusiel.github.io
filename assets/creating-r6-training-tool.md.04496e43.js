import{_ as o}from"./chunks/BlogPost.56b12f89.js";import{o as a,c as n,a as r,w as i,b as e,d as t}from"./app.a381fe97.js";const l=e("div",null,[t(" I decided to create a complementary tool for training in Rainbow Six Siege. This tool aims to generate a random map callout based on the selected map and floor. "),e("p",null,"I decided to use Vue.JS for this one since I like using Vue.JS and I would like to learn it as much as possible. I also made it to be as simple and functional as possible."),e("p",null,"The tool works by allowing you to select a map and then a floor. After selecting a map and a floor, you can press the generate button. After pressing the generate button, you should see a generated callout. I also displayed a random action to complement the generated callout. For now, there are two options for the random action, go to the room and fire at the room."),e("p",null,[t("You can check the training tool here - "),e("a",{href:"https://iusiel.github.io/r6-training-tool/",target:"_blank",rel:"noreferrer"},"https://iusiel.github.io/r6-training-tool/")]),e("p",null,[t("You can check the source code here - "),e("a",{href:"https://github.com/iusiel/r6-training-tool",target:"_blank",rel:"noreferrer"},"https://github.com/iusiel/r6-training-tool")]),e("p",null,"Right now, the thing I want to fix the most is that you cannot repeat through the callouts for a particular map and floor. If you have already gone through all of them, you need to either refresh the application or you need to select a new map or floor. Also note that the map list is not yet complete.")],-1),g=JSON.parse('{"title":"Creating R6 Training Tool","description":"","frontmatter":{"title":"Creating R6 Training Tool","date":"2022-10-08T00:00:00.000Z","meta":[{"name":"description","content":"Trying to learn rainbow six siege"},{"property":"og:image","content":"/images/logo.jpg"},{"property":"og:type","content":"website"}],"activeLink":"random"},"headers":[],"relativePath":"creating-r6-training-tool.md"}'),s={name:"creating-r6-training-tool.md"},m=Object.assign(s,{setup(c){return(h,u)=>(a(),n("div",null,[r(o,null,{default:i(()=>[l]),_:1})]))}});export{g as __pageData,m as default};
